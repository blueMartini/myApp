<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE beans PUBLIC "-//SPRING//DTD BEAN//EN"
"http://www.springframework.org/dtd/spring-beans.dtd">
<beans>
  <!-- 定义一个Bean -->
  <bean id="HelloWorld" class="com.gc.action.HelloWorld" depends-on="date">
    <!--将其变量msg通过依赖注入 -->
      <property name="msg">
           <value>HelloWorld</value>
      </property>
      <property name="date">
            <ref bean="date"/>
      </property>
  </bean>
  <!-- 负责国际化支持 -->
  <!-- <bean id="messageSource" class="org.springframework.context.support.ResourceBundleMessageSource">
      <property name="basename">
          国际化支持的定义在文件名为messages的文件中
          <value>messages</value>
      </property>
  </bean> -->

  <bean id="date" class="java.util.Date"/>
  <bean id="log" class="com.gc.action.LogAround"/>
 <!-- 使用自动代理 --> 
<!--   <bean id="autoProxyCreator"   -->
<!--         class="org.springframework.aop.framework.autoproxy.DefaultAdvisorAutoProxyCreator" /> -->
  
  <bean id="timeBook" class="com.gc.action.TimeBook"/>
  <bean id="logBefore" class="com.gc.action.logBefore"/>
  <bean id="logBeforeAdvisor"
          class="org.springframework.aop.support.RegexpMethodPointcutAdvisor">
         <property name="advice">
            <ref bean="logBefore"/>
         </property>
         <property name="patterns">
            <list>
                 <value>.*do.*</value>
            </list>
         </property>
  </bean>
  
   
  
  <bean id="logProxy" class="org.springframework.aop.framework.ProxyFactoryBean">
      <property name="proxyInterfaces">
              <value>com.gc.impl.TimeBookInterface</value>
      </property>
      <property name="proxyTargetClass">
           <value>true</value>
      </property>
      <property name="target">
            <ref bean="timeBook"/>
      </property>
      <!--指定要代理的类 -->
      <property name="interceptorNames">
         <list>
             <value>logBefore</value>
         </list>
      </property>
  </bean>
  
 </beans>
 